generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String     @db.VarChar(255)
  email     String     @unique
  phone     String     @db.VarChar(15)
  password  String
  role      RoleUser   @default(buyer)
  address   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Category  Category[]
  Seller    Seller[]
}

model Seller {
  id            String    @id @default(uuid())
  userId        String    @map("user_id")
  storeName     String    @map("store_name") @db.VarChar(255)
  storeLocation String    @map("store_location") @db.VarChar(255)
  verified      Boolean   @default(false)
  bankName      String    @map("bank_name") @db.VarChar(255)
  bankAccount   String    @map("bank_account") @db.VarChar(255)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
  user          User      @relation(fields: [userId], references: [id])
}

model Category {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(255)
  imageUrl  String
  userId    String    @map("user_id")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  createdBy User      @relation(fields: [userId], references: [id])
  products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  sellerId    String?  @map("seller_id")
  name        String   @db.VarChar(255)
  description String
  price       Float
  stock       Int
  imageUrl    String
  categoryId  String   @map("category_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id])
  seller      Seller?  @relation(fields: [sellerId], references: [id])
}

enum RoleUser {
  buyer
  seller
  admin
  superadmin
}
